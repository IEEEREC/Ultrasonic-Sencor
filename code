#include <LiquidCrystal_I2C.h>

//  Set the pins
const int triggerPin = 0;
const int echoPin = 16;

long duration;
int distance;

//  A counter to determine when to clear the LCD
int clearDisplayCount = 0;

LiquidCrystal_I2C lcd(0x27, 16, 1);
void setup() {
  //  Configure the pins to behave either as an input or an output
  pinMode(triggerPin, OUTPUT);
  pinMode(echoPin, INPUT);

  //  Initialize the LCD
  lcd.init();

  //  Turn on the LCD backlight
  lcd.backlight();
}

void loop() {
  // Clears the trigPin
  digitalWrite(triggerPin, LOW);
  delayMicroseconds(2);

  // Sets the trigPin on HIGH state for 10 micro seconds
  digitalWrite(triggerPin, HIGH);
  delayMicroseconds(10);
  digitalWrite(triggerPin, LOW);

  // Reads the echoPin, returns the sound wave travel time in microseconds
  float microseconds = pulseIn(echoPin, HIGH);
  //  Convert to seconds
  float seconds = microseconds / 1000000;
  //  Convert to meters knowing that sound travels in air with a velocity of 343m/s
  float meters = seconds * 343;
  //  Convert to cm
  float cm = meters * 100;
  //  Divide by two since we care about the distance to the object, not
  //  to the object and back
  cm = cm / 2;
  //  Save to distance variable
  distance = cm;

  //  Prints "Distance: 0000cm"
  //  16 characters avilable
  lcd.print("Distance: "); // 10 characters
  lcd.printf("%04d", distance); //  4 characters
  lcd.print("cm"); //  2 characters
  //  Total = 16 characters
  delay(250);

  //  Clears the buffer of the LCD after 2048 cycles of the loop
  if (clearDisplayCount == 2048) {
    //  Resets counter
    clearDisplayCount = 0;
    //  Clear the LCD display and the buffer
    lcd.clear();
  } else {
    //  Set the location at which subsequent text written to the LCD will be displayed
    lcd.setCursor(0, 0);
  }

  //  Increments the count for clearing display
  clearDisplayCount++;
}
